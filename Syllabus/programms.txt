Given a string "aaabbbcc", compress it "a3b3c2".Given that output strings length is always smaller than input string, you have to do it inpalce.
( Compress a string aaabbbcc into a3b3c2 in java ).

public class CompressString {
	
	public static void main(String[] args) {
		String str ="aaabbbcc"; // output = "a3b3c2"
		
		Map<Character, Integer> map = new HashMap<Character, Integer>();
		
		for(int i = 0; i< str.length(); i++) {
			
			if(map.containsKey(str.charAt(i))) {
				map.put(str.charAt(i),map.get(str.charAt(i))+1);
			}else {
				map.put(str.charAt(i), 1);
			}
		}
		
		map.forEach((key,value) -> System.out.print(key + "" + value));
	}

}

-----------------------------------------

Write Java Program -input "a2b3c1" and Output should be "aabbbc"

public class ExpandString {
	
	public static void main(String[] args) {
		String str = "a3b3c2"; // output "aaabbbcc"
		
		
		for(int i = 0 ; i< str.length(); i++) {
			if(Character.isAlphabetic(str.charAt(i))) {
				System.out.print(str.charAt(i));
			}else {
				int x = Character.getNumericValue(str.charAt(i));
				//System.out.println(x);
				
				for(int j = 1; j<x; j++) {
					System.out.print(str.charAt(i-1));
				}
			}
		}	
	}
}

-----------------------------------------

Write a java program to find sum of even numbers and sum of odd numbers in a given list using java 8 streams.
List<Integer> list = Arrays.asList(3,5,6,8,9);

public class SumOfEvenOdd {
	
	public static void main(String[] args) {
		List<Integer> list = Arrays.asList(3,5,6,8,9);
		
		//filter even numbers and add to list
		List<Integer> listOfEvenNum = list.stream().filter(n -> n % 2 ==0 ).collect(Collectors.toList());
		System.out.println(listOfEvenNum);
		
		int sumOfEvenNumbers = list.stream().filter(n->n%2==0).mapToInt(Integer::intValue).sum();

		System.out.println(sumOfEvenNumbers);
		
		//filter Odd numbers and add to list
		List<Integer> listOfOddNum = list.stream().filter(n->n%2 == 1).collect(Collectors.toList());
		
		System.out.println(listOfOddNum);
		
		int sumOfOddNumbers = list.stream().filter(n->n%2==1).mapToInt(Integer::intValue).sum();
	
		System.out.println(sumOfOddNumbers);
	}
}

-----------------------------------------

Given an array of integers , write a java 8 program to find the second smallest element.
int[] numbers = {5,2,8,3,1};


Given two arrays of integers, write a java 8 program to find the common elements between them.
int [] array1 = {1,2,3,4,5};
int [] array2 = {4,5,6,7,8};

//https://www.youtube.com/watch?v=RynqGUbgw9k